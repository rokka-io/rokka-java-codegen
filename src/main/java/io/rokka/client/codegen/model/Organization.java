/*
 * rokka.io
 * digital image processing done right. [Documentation](https://rokka.io/documentation). [Changelog](https://api.rokka.io/changelog.md).
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.rokka.client.codegen.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.rokka.client.codegen.model.OrganizationOptions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Organization
 */

public class Organization {
  @SerializedName("id")
  private String id = null;

  @SerializedName("display_name")
  private String displayName = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("billing_email")
  private String billingEmail = null;

  @SerializedName("options")
  private OrganizationOptions options = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("master_organization")
  private String masterOrganization = null;

  public Organization id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Organization displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public Organization name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Web safe, using in routes and api calls
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Web safe, using in routes and api calls")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Organization billingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
    return this;
  }

   /**
   * Get billingEmail
   * @return billingEmail
  **/
  @ApiModelProperty(required = true, value = "")
  public String getBillingEmail() {
    return billingEmail;
  }

  public void setBillingEmail(String billingEmail) {
    this.billingEmail = billingEmail;
  }

  public Organization options(OrganizationOptions options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @ApiModelProperty(value = "")
  public OrganizationOptions getOptions() {
    return options;
  }

  public void setOptions(OrganizationOptions options) {
    this.options = options;
  }

  public Organization created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public Organization masterOrganization(String masterOrganization) {
    this.masterOrganization = masterOrganization;
    return this;
  }

   /**
   * Billing will agregate all sub organizations and bill the master organization.
   * @return masterOrganization
  **/
  @ApiModelProperty(value = "Billing will agregate all sub organizations and bill the master organization.")
  public String getMasterOrganization() {
    return masterOrganization;
  }

  public void setMasterOrganization(String masterOrganization) {
    this.masterOrganization = masterOrganization;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Organization organization = (Organization) o;
    return Objects.equals(this.id, organization.id) &&
        Objects.equals(this.displayName, organization.displayName) &&
        Objects.equals(this.name, organization.name) &&
        Objects.equals(this.billingEmail, organization.billingEmail) &&
        Objects.equals(this.options, organization.options) &&
        Objects.equals(this.created, organization.created) &&
        Objects.equals(this.masterOrganization, organization.masterOrganization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, displayName, name, billingEmail, options, created, masterOrganization);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Organization {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    billingEmail: ").append(toIndentedString(billingEmail)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    masterOrganization: ").append(toIndentedString(masterOrganization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

