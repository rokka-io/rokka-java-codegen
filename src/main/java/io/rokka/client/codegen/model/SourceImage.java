/*
 * rokka.io
 * digital image processing done right. [Documentation](https://rokka.io/documentation). [Changelog](https://api.rokka.io/changelog.md).
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.rokka.client.codegen.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * SourceImage
 */

public class SourceImage {
  @SerializedName("hash")
  private String hash = null;

  @SerializedName("short_hash")
  private String shortHash = null;

  @SerializedName("binary_hash")
  private String binaryHash = null;

  @SerializedName("created")
  private OffsetDateTime created = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("mimetype")
  private String mimetype = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("size")
  private Integer size = null;

  @SerializedName("width")
  private Integer width = null;

  @SerializedName("height")
  private Integer height = null;

  @SerializedName("organization")
  private String organization = null;

  @SerializedName("link")
  private String link = null;

  @SerializedName("dynamic_metadata")
  private Object dynamicMetadata = null;

  @SerializedName("static_metadata")
  private Object staticMetadata = null;

  @SerializedName("user_metadata")
  private Object userMetadata = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  @SerializedName("deleted_date")
  private OffsetDateTime deletedDate = null;

  public SourceImage hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * Get hash
   * @return hash
  **/
  @ApiModelProperty(example = "c412d8d6e4b9b7b058320b06972ac0ec72cfe6e5", value = "")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public SourceImage shortHash(String shortHash) {
    this.shortHash = shortHash;
    return this;
  }

   /**
   * Get shortHash
   * @return shortHash
  **/
  @ApiModelProperty(example = "c412d8", value = "")
  public String getShortHash() {
    return shortHash;
  }

  public void setShortHash(String shortHash) {
    this.shortHash = shortHash;
  }

  public SourceImage binaryHash(String binaryHash) {
    this.binaryHash = binaryHash;
    return this;
  }

   /**
   * Get binaryHash
   * @return binaryHash
  **/
  @ApiModelProperty(example = "03b3e8a0bdd76ef55c021066642c9d2fa9c02799", value = "")
  public String getBinaryHash() {
    return binaryHash;
  }

  public void setBinaryHash(String binaryHash) {
    this.binaryHash = binaryHash;
  }

  public SourceImage created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public SourceImage name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "image1.png", value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SourceImage mimetype(String mimetype) {
    this.mimetype = mimetype;
    return this;
  }

   /**
   * Get mimetype
   * @return mimetype
  **/
  @ApiModelProperty(example = "image/png", value = "")
  public String getMimetype() {
    return mimetype;
  }

  public void setMimetype(String mimetype) {
    this.mimetype = mimetype;
  }

  public SourceImage format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public SourceImage size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(example = "131284", value = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public SourceImage width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * Get width
   * @return width
  **/
  @ApiModelProperty(example = "800", value = "")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public SourceImage height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * Get height
   * @return height
  **/
  @ApiModelProperty(example = "1160", value = "")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public SourceImage organization(String organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(example = "mycompany", value = "")
  public String getOrganization() {
    return organization;
  }

  public void setOrganization(String organization) {
    this.organization = organization;
  }

  public SourceImage link(String link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @ApiModelProperty(example = "/sourceimages/mycompany/c412d8d6e4b9b7b058320b06972ac0ec72cfe6e5", value = "")
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }

  public SourceImage dynamicMetadata(Object dynamicMetadata) {
    this.dynamicMetadata = dynamicMetadata;
    return this;
  }

   /**
   * Get dynamicMetadata
   * @return dynamicMetadata
  **/
  @ApiModelProperty(example = "", value = "")
  public Object getDynamicMetadata() {
    return dynamicMetadata;
  }

  public void setDynamicMetadata(Object dynamicMetadata) {
    this.dynamicMetadata = dynamicMetadata;
  }

  public SourceImage staticMetadata(Object staticMetadata) {
    this.staticMetadata = staticMetadata;
    return this;
  }

   /**
   * Get staticMetadata
   * @return staticMetadata
  **/
  @ApiModelProperty(value = "")
  public Object getStaticMetadata() {
    return staticMetadata;
  }

  public void setStaticMetadata(Object staticMetadata) {
    this.staticMetadata = staticMetadata;
  }

  public SourceImage userMetadata(Object userMetadata) {
    this.userMetadata = userMetadata;
    return this;
  }

   /**
   * Get userMetadata
   * @return userMetadata
  **/
  @ApiModelProperty(example = "{\"foo\":\"bar\"}", value = "")
  public Object getUserMetadata() {
    return userMetadata;
  }

  public void setUserMetadata(Object userMetadata) {
    this.userMetadata = userMetadata;
  }

   /**
   * Null as default (means false)
   * @return deleted
  **/
  @ApiModelProperty(example = "false", value = "Null as default (means false)")
  public Boolean isDeleted() {
    return deleted;
  }

   /**
   * Get deletedDate
   * @return deletedDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDeletedDate() {
    return deletedDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SourceImage sourceImage = (SourceImage) o;
    return Objects.equals(this.hash, sourceImage.hash) &&
        Objects.equals(this.shortHash, sourceImage.shortHash) &&
        Objects.equals(this.binaryHash, sourceImage.binaryHash) &&
        Objects.equals(this.created, sourceImage.created) &&
        Objects.equals(this.name, sourceImage.name) &&
        Objects.equals(this.mimetype, sourceImage.mimetype) &&
        Objects.equals(this.format, sourceImage.format) &&
        Objects.equals(this.size, sourceImage.size) &&
        Objects.equals(this.width, sourceImage.width) &&
        Objects.equals(this.height, sourceImage.height) &&
        Objects.equals(this.organization, sourceImage.organization) &&
        Objects.equals(this.link, sourceImage.link) &&
        Objects.equals(this.dynamicMetadata, sourceImage.dynamicMetadata) &&
        Objects.equals(this.staticMetadata, sourceImage.staticMetadata) &&
        Objects.equals(this.userMetadata, sourceImage.userMetadata) &&
        Objects.equals(this.deleted, sourceImage.deleted) &&
        Objects.equals(this.deletedDate, sourceImage.deletedDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hash, shortHash, binaryHash, created, name, mimetype, format, size, width, height, organization, link, dynamicMetadata, staticMetadata, userMetadata, deleted, deletedDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SourceImage {\n");
    
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    shortHash: ").append(toIndentedString(shortHash)).append("\n");
    sb.append("    binaryHash: ").append(toIndentedString(binaryHash)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    mimetype: ").append(toIndentedString(mimetype)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    dynamicMetadata: ").append(toIndentedString(dynamicMetadata)).append("\n");
    sb.append("    staticMetadata: ").append(toIndentedString(staticMetadata)).append("\n");
    sb.append("    userMetadata: ").append(toIndentedString(userMetadata)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    deletedDate: ").append(toIndentedString(deletedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

