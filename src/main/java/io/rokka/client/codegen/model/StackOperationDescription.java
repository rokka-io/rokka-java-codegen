/*
 * rokka.io
 * digital image processing done right. [Documentation](https://rokka.io/documentation). [Changelog](https://api.rokka.io/changelog.md).
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.rokka.client.codegen.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Values of a single stack operation
 */
@ApiModel(description = "Values of a single stack operation")

public class StackOperationDescription {
  @SerializedName("properties")
  private Map<String, Object> properties = new HashMap<String, Object>();

  @SerializedName("description")
  private String description = null;

  @SerializedName("required")
  private List<String> required = null;

  @SerializedName("oneOf")
  private List<String> oneOf = null;

  public StackOperationDescription properties(Map<String, Object> properties) {
    this.properties = properties;
    return this;
  }

  public StackOperationDescription putPropertiesItem(String key, Object propertiesItem) {
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(required = true, value = "")
  public Map<String, Object> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, Object> properties) {
    this.properties = properties;
  }

  public StackOperationDescription description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(example = "Description of the operation", required = true, value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public StackOperationDescription required(List<String> required) {
    this.required = required;
    return this;
  }

  public StackOperationDescription addRequiredItem(String requiredItem) {
    if (this.required == null) {
      this.required = new ArrayList<String>();
    }
    this.required.add(requiredItem);
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(example = "[\"width\",\"height\"]", value = "")
  public List<String> getRequired() {
    return required;
  }

  public void setRequired(List<String> required) {
    this.required = required;
  }

  public StackOperationDescription oneOf(List<String> oneOf) {
    this.oneOf = oneOf;
    return this;
  }

  public StackOperationDescription addOneOfItem(String oneOfItem) {
    if (this.oneOf == null) {
      this.oneOf = new ArrayList<String>();
    }
    this.oneOf.add(oneOfItem);
    return this;
  }

   /**
   * Get oneOf
   * @return oneOf
  **/
  @ApiModelProperty(example = "[]", value = "")
  public List<String> getOneOf() {
    return oneOf;
  }

  public void setOneOf(List<String> oneOf) {
    this.oneOf = oneOf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StackOperationDescription stackOperationDescription = (StackOperationDescription) o;
    return Objects.equals(this.properties, stackOperationDescription.properties) &&
        Objects.equals(this.description, stackOperationDescription.description) &&
        Objects.equals(this.required, stackOperationDescription.required) &&
        Objects.equals(this.oneOf, stackOperationDescription.oneOf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(properties, description, required, oneOf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StackOperationDescription {\n");
    
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    oneOf: ").append(toIndentedString(oneOf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

