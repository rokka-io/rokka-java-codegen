/*
 * rokka.io
 * digital image processing done right. [Documentation](https://rokka.io/documentation). [Changelog](https://api.rokka.io/changelog.md).
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.rokka.client.codegen.api;

import io.rokka.client.codegen.ApiException;
import io.rokka.client.codegen.model.ListStacksResponse;
import io.rokka.client.codegen.model.Stack;
import io.rokka.client.codegen.model.StackDefinition;
import io.rokka.client.codegen.model.StackOperationDescription;
import io.rokka.client.codegen.model.StackOptions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StacksApi
 */
@Ignore
public class StacksApiTest {

    private final StacksApi api = new StacksApi();

    
    /**
     * Create a new stack.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createStackTest() throws ApiException {
        StackDefinition stackDefinition = null;
        String organization = null;
        String name = null;
        Boolean overwrite = null;
        Stack response = api.createStack(stackDefinition, organization, name, overwrite);

        // TODO: test validations
    }
    
    /**
     * Delete a stack.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteStackTest() throws ApiException {
        String organization = null;
        String name = null;
        api.deleteStack(organization, name);

        // TODO: test validations
    }
    
    /**
     * Get a single stack.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getStackTest() throws ApiException {
        String organization = null;
        String name = null;
        Stack response = api.getStack(organization, name);

        // TODO: test validations
    }
    
    /**
     * Listing all available operations that can be used in stacks.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperationsTest() throws ApiException {
        Map<String, StackOperationDescription> response = api.listOperations();

        // TODO: test validations
    }
    
    /**
     * List all available options that can be set on stacks.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listStackOptionsTest() throws ApiException {
        StackOptions response = api.listStackOptions();

        // TODO: test validations
    }
    
    /**
     * Get all stacks of an organization.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listStacksTest() throws ApiException {
        String organization = null;
        ListStacksResponse response = api.listStacks(organization);

        // TODO: test validations
    }
    
}
